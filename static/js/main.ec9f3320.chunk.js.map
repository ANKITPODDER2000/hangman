{"version":3,"sources":["image/0.jpg","image/1.jpg","image/2.jpg","image/3.jpg","image/4.jpg","image/5.jpg","image/6.jpg","image/7.jpg","image/8.jpg","image/9.jpg","image/10.jpg","HangmanImg.js","chooseWord.js","HangmanGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HangmanImg","className","src","this","props","imgArr","img_num","alt","Component","defaultProps","img0","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","words","HangmanGame","word","Math","floor","random","length","state","img","currentWord","makeInitialWord","leftChance","win","guess","Set","Word","i","setState","cur_st","ch","newCurrentWord","add","e","match","currentState","makeNewCurrentWord","arr","push","keys","map","k","onClick","click","target","disabled","has","restart","split","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec9f3320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.f06df755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.ca6c10d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.1dc76568.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.837148ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.db9097e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.fbff4784.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.c4ea9528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.62a781c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.0f8ca81e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.1b557aa7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.c80394c2.jpg\";","import React, { Component } from \"react\";\r\nimport img0 from \"./image/0.jpg\"\r\nimport img1 from \"./image/1.jpg\"\r\nimport img2 from \"./image/2.jpg\"\r\nimport img3 from \"./image/3.jpg\"\r\nimport img4 from \"./image/4.jpg\"\r\nimport img5 from \"./image/5.jpg\"\r\nimport img6 from \"./image/6.jpg\"\r\nimport img7 from \"./image/7.jpg\"\r\nimport img8 from \"./image/8.jpg\"\r\nimport img9 from \"./image/9.jpg\"\r\nimport img10 from \"./image/10.jpg\"\r\nimport \"./HangmanImg.css\";\r\n\r\nclass HangmanImg extends Component{\r\n    static defaultProps = {\r\n        imgArr : [img0 , img1 , img2 , img3 , img4 , img5 , img6 , img7 , img8 , img9 , img10],\r\n    }\r\n    render() {\r\n        return (\r\n            <img className=\"HangmanImg\" src={this.props.imgArr[this.props.img_num]} alt=\"img1\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default HangmanImg;","let words = [\"apple\", \"java\", \"python\", 'ruby', 'scala', 'matlab', \"kotlin\", 'go', 'swift',\r\n    'computer', 'program', 'execution', 'data', 'info', 'euro', 'knight', 'money', 'solution',\r\n    'solve' , 'exe' , 'like' , 'dislike' , 'comment' , 'love' , 'ap' , 'etc' , 'luck','best'];\r\n/*\r\nlet chooseWord = () => {\r\n    let word = words[Math.floor(Math.random() * words.length)];\r\n    return word;\r\n}\r\n\r\nlet ch_word = chooseWord();\r\n*/\r\nexport default words;","import React, { Component } from \"react\";\r\nimport HangmanImg from \"./HangmanImg\";\r\nimport words from \"./chooseWord\";\r\nimport \"./HangmanGame.css\";\r\n\r\nclass HangmanGame extends Component {\r\n  static defaultProps = {\r\n    keys: \"abcdefghijklmnopqrstuvwxyz\".split(\"\"),\r\n  };\r\n\r\n  makeInitialWord(Word) {\r\n    let word = \"\";\r\n    for (let i = 0; i < Word.length; i++) {\r\n      word += \"*\";\r\n    }\r\n    return word;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let word = words[Math.floor(Math.random() * words.length)];\r\n    this.state = {\r\n      word: word,\r\n      img: 10 - word.length,\r\n      currentWord: this.makeInitialWord(word),\r\n      leftChance: word.length - 1,\r\n      win: false,\r\n      guess : new Set(),\r\n    };\r\n  }\r\n  restart(){\r\n      let word = words[Math.floor(Math.random() * words.length)];\r\n      this.setState({\r\n        word: word,\r\n        img: 10 - word.length,\r\n        currentWord: this.makeInitialWord(word),\r\n        leftChance: word.length - 1,\r\n        win: false,\r\n        guess : new Set(),\r\n      });\r\n  }\r\n\r\n  makeNewCurrentWord(cur_st, ch) {\r\n    let currentWord = cur_st.currentWord;\r\n    let newCurrentWord = \"\";\r\n    for (let i = 0; i < this.state.word.length; i++) {\r\n      if (this.state.word[i] === ch) {\r\n        newCurrentWord += ch;\r\n      } else {\r\n        newCurrentWord += currentWord[i];\r\n      }\r\n    }\r\n    for (let i = 0; i < newCurrentWord.length; i++) {\r\n      if (newCurrentWord[i] === \"*\") {\r\n        return {\r\n          currentWord: newCurrentWord,\r\n          guess: cur_st.guess.add(ch),\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      currentWord: newCurrentWord,\r\n      win: true,\r\n      guess: cur_st.guess.add(ch)\r\n    };\r\n  }\r\n\r\n  click(e, ch) {\r\n    if (this.state.win || this.state.leftChance === -1) return;\r\n    if (!this.state.word.match(ch)) {\r\n      this.setState((currentState) => {\r\n        return {\r\n          leftChance: currentState.leftChance - 1,\r\n          img: currentState.img + 1,\r\n          guess: currentState.guess.add(ch),\r\n        };\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState((currentState) =>\r\n        this.makeNewCurrentWord(currentState, ch)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let arr = [];\r\n    for (let i = 0; i < this.state.currentWord.length; i++) {\r\n      if (this.state.currentWord[i] === \"*\" && this.state.leftChance === -1) {\r\n        arr.push(<p className=\"red\">{this.state.word[i]}</p>);\r\n      } else {\r\n        arr.push(<p>{this.state.currentWord[i]}</p>);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"hangmangame\">\r\n        <HangmanImg img_num={this.state.img} />\r\n        <p className=\"msg\">\r\n          {this.state.leftChance === -1\r\n            ? \"Game Over!\"\r\n            : this.state.win\r\n            ? \"Woww , You win!\"\r\n            : `Guess left : ${this.state.leftChance}`}\r\n        </p>\r\n        <div className=\"text\">{arr}</div>\r\n        <div className=\"keyboard\">\r\n          {this.props.keys.map((k) => (\r\n            <button onClick={(e) => this.click(e.target, k)} disabled={this.state.guess.has(k)}>{k}</button>\r\n          ))}\r\n        </div>\r\n        <button className=\"restart\" onClick={() => this.restart()}>\r\n          {this.state.leftChance === -1\r\n            ? \"Play Again ? \"\r\n            : this.state.win\r\n            ? \"Play Again ?\"\r\n            : \"Restart ?\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HangmanGame;","import React , {Component} from 'react';\nimport HangmanGame from \"./HangmanGame\";\nimport './App.css';\n\nclass App extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                <h1>Hangman Game!</h1>\n                <HangmanGame/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}